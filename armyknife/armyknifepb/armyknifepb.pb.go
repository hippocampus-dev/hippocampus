// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: armyknifepb/armyknifepb.proto

package armyknifepb

import (
	context "context"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type StatusMessage_Code int32

const (
	StatusMessage_OK                 StatusMessage_Code = 0
	StatusMessage_Canceled           StatusMessage_Code = 1
	StatusMessage_Unknown            StatusMessage_Code = 2
	StatusMessage_InvalidArgument    StatusMessage_Code = 3
	StatusMessage_DeadlineExceeded   StatusMessage_Code = 4
	StatusMessage_NotFound           StatusMessage_Code = 5
	StatusMessage_AlreadyExists      StatusMessage_Code = 6
	StatusMessage_PermissionDenied   StatusMessage_Code = 7
	StatusMessage_ResourceExhausted  StatusMessage_Code = 8
	StatusMessage_FailedPrecondition StatusMessage_Code = 9
	StatusMessage_Aborted            StatusMessage_Code = 10
	StatusMessage_OutOfRange         StatusMessage_Code = 11
	StatusMessage_Unimplemented      StatusMessage_Code = 12
	StatusMessage_Internal           StatusMessage_Code = 13
	StatusMessage_Unavailable        StatusMessage_Code = 14
	StatusMessage_DataLoss           StatusMessage_Code = 15
	StatusMessage_Unauthenticated    StatusMessage_Code = 16
)

var StatusMessage_Code_name = map[int32]string{
	0:  "OK",
	1:  "Canceled",
	2:  "Unknown",
	3:  "InvalidArgument",
	4:  "DeadlineExceeded",
	5:  "NotFound",
	6:  "AlreadyExists",
	7:  "PermissionDenied",
	8:  "ResourceExhausted",
	9:  "FailedPrecondition",
	10: "Aborted",
	11: "OutOfRange",
	12: "Unimplemented",
	13: "Internal",
	14: "Unavailable",
	15: "DataLoss",
	16: "Unauthenticated",
}

var StatusMessage_Code_value = map[string]int32{
	"OK":                 0,
	"Canceled":           1,
	"Unknown":            2,
	"InvalidArgument":    3,
	"DeadlineExceeded":   4,
	"NotFound":           5,
	"AlreadyExists":      6,
	"PermissionDenied":   7,
	"ResourceExhausted":  8,
	"FailedPrecondition": 9,
	"Aborted":            10,
	"OutOfRange":         11,
	"Unimplemented":      12,
	"Internal":           13,
	"Unavailable":        14,
	"DataLoss":           15,
	"Unauthenticated":    16,
}

func (x StatusMessage_Code) String() string {
	return proto.EnumName(StatusMessage_Code_name, int32(x))
}

func (StatusMessage_Code) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a49dc6c766295a1a, []int{2, 0}
}

type DelayMessage struct {
	Delay                int64    `protobuf:"varint,1,opt,name=delay,proto3" json:"delay,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DelayMessage) Reset()         { *m = DelayMessage{} }
func (m *DelayMessage) String() string { return proto.CompactTextString(m) }
func (*DelayMessage) ProtoMessage()    {}
func (*DelayMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_a49dc6c766295a1a, []int{0}
}
func (m *DelayMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DelayMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DelayMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DelayMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelayMessage.Merge(m, src)
}
func (m *DelayMessage) XXX_Size() int {
	return m.Size()
}
func (m *DelayMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_DelayMessage.DiscardUnknown(m)
}

var xxx_messageInfo_DelayMessage proto.InternalMessageInfo

func (m *DelayMessage) GetDelay() int64 {
	if m != nil {
		return m.Delay
	}
	return 0
}

type DelayResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DelayResponse) Reset()         { *m = DelayResponse{} }
func (m *DelayResponse) String() string { return proto.CompactTextString(m) }
func (*DelayResponse) ProtoMessage()    {}
func (*DelayResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a49dc6c766295a1a, []int{1}
}
func (m *DelayResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DelayResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DelayResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DelayResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelayResponse.Merge(m, src)
}
func (m *DelayResponse) XXX_Size() int {
	return m.Size()
}
func (m *DelayResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DelayResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DelayResponse proto.InternalMessageInfo

type StatusMessage struct {
	Code                 StatusMessage_Code `protobuf:"varint,1,opt,name=code,proto3,enum=StatusMessage_Code" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *StatusMessage) Reset()         { *m = StatusMessage{} }
func (m *StatusMessage) String() string { return proto.CompactTextString(m) }
func (*StatusMessage) ProtoMessage()    {}
func (*StatusMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_a49dc6c766295a1a, []int{2}
}
func (m *StatusMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StatusMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StatusMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *StatusMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusMessage.Merge(m, src)
}
func (m *StatusMessage) XXX_Size() int {
	return m.Size()
}
func (m *StatusMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusMessage.DiscardUnknown(m)
}

var xxx_messageInfo_StatusMessage proto.InternalMessageInfo

func (m *StatusMessage) GetCode() StatusMessage_Code {
	if m != nil {
		return m.Code
	}
	return StatusMessage_OK
}

type StatusResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatusResponse) Reset()         { *m = StatusResponse{} }
func (m *StatusResponse) String() string { return proto.CompactTextString(m) }
func (*StatusResponse) ProtoMessage()    {}
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a49dc6c766295a1a, []int{3}
}
func (m *StatusResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StatusResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *StatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusResponse.Merge(m, src)
}
func (m *StatusResponse) XXX_Size() int {
	return m.Size()
}
func (m *StatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StatusResponse proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("StatusMessage_Code", StatusMessage_Code_name, StatusMessage_Code_value)
	proto.RegisterType((*DelayMessage)(nil), "DelayMessage")
	proto.RegisterType((*DelayResponse)(nil), "DelayResponse")
	proto.RegisterType((*StatusMessage)(nil), "StatusMessage")
	proto.RegisterType((*StatusResponse)(nil), "StatusResponse")
}

func init() { proto.RegisterFile("armyknifepb/armyknifepb.proto", fileDescriptor_a49dc6c766295a1a) }

var fileDescriptor_a49dc6c766295a1a = []byte{
	// 431 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x52, 0xed, 0x6a, 0xdb, 0x30,
	0x14, 0x8d, 0xd3, 0x24, 0xed, 0x6e, 0x62, 0x5b, 0x55, 0xbb, 0x31, 0x0a, 0x0b, 0xc3, 0x0c, 0x56,
	0x18, 0x78, 0xd0, 0x3d, 0x41, 0xd6, 0xa4, 0x50, 0xf6, 0x91, 0xe2, 0x91, 0xdf, 0x43, 0xb6, 0x6e,
	0x53, 0x51, 0xe5, 0xca, 0x48, 0x72, 0x97, 0xbc, 0xd3, 0x1e, 0x64, 0x3f, 0xf7, 0x08, 0x23, 0x7f,
	0xf6, 0x1a, 0x45, 0x0e, 0x85, 0xe6, 0x9f, 0x0e, 0xf7, 0x9c, 0xa3, 0xa3, 0x7b, 0x04, 0x6f, 0x84,
	0x5d, 0x6d, 0xee, 0x49, 0xdd, 0x62, 0x5d, 0x7e, 0x7c, 0x76, 0xce, 0x6b, 0x6b, 0xbc, 0xc9, 0xde,
	0xc1, 0x68, 0x8a, 0x5a, 0x6c, 0xbe, 0xa1, 0x73, 0x62, 0x89, 0xfc, 0x14, 0xfa, 0x32, 0xe0, 0xd7,
	0xd1, 0xdb, 0xe8, 0xfc, 0xa0, 0xd8, 0x81, 0x2c, 0x85, 0xb8, 0x65, 0x15, 0xe8, 0x6a, 0x43, 0x0e,
	0xb3, 0xff, 0x5d, 0x88, 0x7f, 0x78, 0xe1, 0x1b, 0xf7, 0x24, 0x7c, 0x0f, 0xbd, 0xca, 0x48, 0x6c,
	0x75, 0xc9, 0xc5, 0x49, 0xbe, 0x37, 0xcd, 0x2f, 0x8d, 0xc4, 0xa2, 0x25, 0x64, 0xbf, 0xbb, 0xd0,
	0x0b, 0x90, 0x0f, 0xa0, 0x3b, 0xff, 0xc2, 0x3a, 0x7c, 0x04, 0x47, 0x97, 0x82, 0x2a, 0xd4, 0x28,
	0x59, 0xc4, 0x87, 0x70, 0xb8, 0xa0, 0x7b, 0x32, 0xbf, 0x88, 0x75, 0xf9, 0x09, 0xa4, 0xd7, 0xf4,
	0x20, 0xb4, 0x92, 0x13, 0xbb, 0x6c, 0x56, 0x48, 0x9e, 0x1d, 0xf0, 0x53, 0x60, 0x53, 0x14, 0x52,
	0x2b, 0xc2, 0xd9, 0xba, 0x42, 0x94, 0x28, 0x59, 0x2f, 0xb8, 0x7c, 0x37, 0xfe, 0xca, 0x34, 0x24,
	0x59, 0x9f, 0x1f, 0x43, 0x3c, 0xd1, 0x16, 0x85, 0xdc, 0xcc, 0xd6, 0xca, 0x79, 0xc7, 0x06, 0x41,
	0x76, 0x83, 0x76, 0xa5, 0x9c, 0x53, 0x86, 0xa6, 0x48, 0x0a, 0x25, 0x3b, 0xe4, 0x2f, 0xe1, 0xb8,
	0x40, 0x67, 0x1a, 0x5b, 0xe1, 0x6c, 0x7d, 0x27, 0x1a, 0xe7, 0x51, 0xb2, 0x23, 0xfe, 0x0a, 0xf8,
	0x95, 0x50, 0x1a, 0xe5, 0x8d, 0xc5, 0xca, 0x90, 0x54, 0x5e, 0x19, 0x62, 0x2f, 0x42, 0xba, 0x49,
	0x69, 0x6c, 0x20, 0x01, 0x4f, 0x00, 0xe6, 0x8d, 0x9f, 0xdf, 0x16, 0x82, 0x96, 0xc8, 0x86, 0xe1,
	0xd2, 0x05, 0xa9, 0x55, 0xad, 0x31, 0x24, 0x45, 0xc9, 0x46, 0x21, 0xd5, 0x35, 0x79, 0xb4, 0x24,
	0x34, 0x8b, 0x79, 0x0a, 0xc3, 0x05, 0x89, 0x07, 0xa1, 0xb4, 0x28, 0x35, 0xb2, 0x24, 0x8c, 0xa7,
	0xc2, 0x8b, 0xaf, 0xc6, 0x39, 0x96, 0x86, 0xd7, 0x2e, 0x48, 0x34, 0xfe, 0x0e, 0xc9, 0xab, 0x4a,
	0x04, 0x07, 0x96, 0x31, 0x48, 0x76, 0xab, 0x7c, 0xda, 0xfd, 0xc5, 0x4f, 0x18, 0xd8, 0xba, 0x2a,
	0x15, 0xf1, 0x73, 0xe8, 0xb7, 0xb5, 0xf0, 0x38, 0x7f, 0x5e, 0xe2, 0x59, 0x92, 0xef, 0xb7, 0xd5,
	0xe1, 0x1f, 0x60, 0xb0, 0x73, 0xe1, 0xc9, 0x7e, 0x33, 0x67, 0x69, 0xbe, 0x6f, 0x9f, 0x75, 0x3e,
	0x8f, 0xfe, 0x6c, 0xc7, 0xd1, 0xdf, 0xed, 0x38, 0xfa, 0xb7, 0x1d, 0x47, 0xe5, 0xa0, 0xfd, 0x28,
	0x9f, 0x1e, 0x03, 0x00, 0x00, 0xff, 0xff, 0xa6, 0x5e, 0x6d, 0x80, 0x49, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RpcbinClient is the client API for Rpcbin service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RpcbinClient interface {
	Delay(ctx context.Context, in *DelayMessage, opts ...grpc.CallOption) (*DelayResponse, error)
	Status(ctx context.Context, in *StatusMessage, opts ...grpc.CallOption) (*StatusResponse, error)
}

type rpcbinClient struct {
	cc *grpc.ClientConn
}

func NewRpcbinClient(cc *grpc.ClientConn) RpcbinClient {
	return &rpcbinClient{cc}
}

func (c *rpcbinClient) Delay(ctx context.Context, in *DelayMessage, opts ...grpc.CallOption) (*DelayResponse, error) {
	out := new(DelayResponse)
	err := c.cc.Invoke(ctx, "/rpcbin/Delay", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rpcbinClient) Status(ctx context.Context, in *StatusMessage, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, "/rpcbin/Status", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RpcbinServer is the server API for Rpcbin service.
type RpcbinServer interface {
	Delay(context.Context, *DelayMessage) (*DelayResponse, error)
	Status(context.Context, *StatusMessage) (*StatusResponse, error)
}

// UnimplementedRpcbinServer can be embedded to have forward compatible implementations.
type UnimplementedRpcbinServer struct {
}

func (*UnimplementedRpcbinServer) Delay(ctx context.Context, req *DelayMessage) (*DelayResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delay not implemented")
}
func (*UnimplementedRpcbinServer) Status(ctx context.Context, req *StatusMessage) (*StatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Status not implemented")
}

func RegisterRpcbinServer(s *grpc.Server, srv RpcbinServer) {
	s.RegisterService(&_Rpcbin_serviceDesc, srv)
}

func _Rpcbin_Delay_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DelayMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RpcbinServer).Delay(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcbin/Delay",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RpcbinServer).Delay(ctx, req.(*DelayMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _Rpcbin_Status_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatusMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RpcbinServer).Status(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcbin/Status",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RpcbinServer).Status(ctx, req.(*StatusMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _Rpcbin_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpcbin",
	HandlerType: (*RpcbinServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Delay",
			Handler:    _Rpcbin_Delay_Handler,
		},
		{
			MethodName: "Status",
			Handler:    _Rpcbin_Status_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "armyknifepb/armyknifepb.proto",
}

func (m *DelayMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DelayMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DelayMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Delay != 0 {
		i = encodeVarintArmyknifepb(dAtA, i, uint64(m.Delay))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *DelayResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DelayResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DelayResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *StatusMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StatusMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *StatusMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Code != 0 {
		i = encodeVarintArmyknifepb(dAtA, i, uint64(m.Code))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *StatusResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StatusResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *StatusResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func encodeVarintArmyknifepb(dAtA []byte, offset int, v uint64) int {
	offset -= sovArmyknifepb(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *DelayMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Delay != 0 {
		n += 1 + sovArmyknifepb(uint64(m.Delay))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DelayResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *StatusMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Code != 0 {
		n += 1 + sovArmyknifepb(uint64(m.Code))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *StatusResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovArmyknifepb(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozArmyknifepb(x uint64) (n int) {
	return sovArmyknifepb(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *DelayMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowArmyknifepb
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DelayMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DelayMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Delay", wireType)
			}
			m.Delay = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowArmyknifepb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Delay |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipArmyknifepb(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthArmyknifepb
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DelayResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowArmyknifepb
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DelayResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DelayResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipArmyknifepb(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthArmyknifepb
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *StatusMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowArmyknifepb
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StatusMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StatusMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
			m.Code = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowArmyknifepb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Code |= StatusMessage_Code(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipArmyknifepb(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthArmyknifepb
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *StatusResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowArmyknifepb
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StatusResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StatusResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipArmyknifepb(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthArmyknifepb
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipArmyknifepb(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowArmyknifepb
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowArmyknifepb
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowArmyknifepb
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthArmyknifepb
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupArmyknifepb
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthArmyknifepb
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthArmyknifepb        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowArmyknifepb          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupArmyknifepb = fmt.Errorf("proto: unexpected end of group")
)
