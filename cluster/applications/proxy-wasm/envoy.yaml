admin:
  access_log:
    typed_config:
      "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 15000

stats_config:
  # https://github.com/envoyproxy/envoy/blob/HEAD/source/common/config/well_known_names.cc
  use_all_default_tags: false
  stats_tags:
    - tag_name: response_code
      regex: '(;\.;response_code=\.=(\d{3}))'

static_resources:
  listeners:
    - name: http
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 8080
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: ingress_http
                route_config: &route_config
                  virtual_hosts:
                    - name: default
                      domains: ["*"]
                      routes:
                        - match:
                            prefix: "/"
                          route:
                            cluster: httpbin
                http_filters:
                  - name: kaidotio.envoy-xauthrequest
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
                      config:
                        vm_config:
                          runtime: envoy.wasm.runtime.v8
                          allow_precompiled: true
                          code:
                            local:
                              filename: /envoy_xauthrequest.wasm
                  - name: kaidotio.envoy-trusted-header
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
                      config:
                        vm_config:
                          runtime: envoy.wasm.runtime.v8
                          allow_precompiled: true
                          code:
                            local:
                              filename: /envoy_trusted_header.wasm
                          configuration:
                            "@type": type.googleapis.com/google.protobuf.StringValue
                            value: |
                              {
                                "mappings": [
                                  {
                                    "header_name": "x-auth-request-user",
                                    "trusted_certs": [
                                      {
                                        "uri": "spiffe://cluster.local/ns/istio-system/sa/istio-ingressgateway-service-account"
                                      }
                                    ]
                                  }
                                ]
                              }
                  - name: kaidotio.header-getter
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
                      config:
                        vm_config:
                          runtime: envoy.wasm.runtime.v8
                          allow_precompiled: true
                          code:
                            local:
                              filename: /header_getter.wasm
                          configuration:
                            "@type": type.googleapis.com/google.protobuf.StringValue
                            value: |
                              {
                                "mappings": [
                                  {
                                    "key": "x-auth-request-user-original",
                                    "header_name": "x-auth-request-user"
                                  }
                                ]
                              }
                  - name: kaidotio.header-setter
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
                      config:
                        vm_config:
                          runtime: envoy.wasm.runtime.v8
                          allow_precompiled: true
                          code:
                            local:
                              filename: /header_setter.wasm
                          configuration:
                            "@type": type.googleapis.com/google.protobuf.StringValue
                            value: |
                              {
                                "mappings": [
                                  {
                                    "key": "x-auth-request-user",
                                    "header_name": "x-auth-request-user",
                                    "override": false
                                  },
                                  {
                                    "key": "x-auth-request-user-original",
                                    "header_name": "x-auth-request-user",
                                    "override": true
                                  }
                                ]
                              }
                  - name: kaidotio.fallback-filter
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
                      config:
                        vm_config:
                          vm_id: kaidotio
                          runtime: envoy.wasm.runtime.v8
                          allow_precompiled: true
                          code:
                            local:
                              filename: /fallback_filter.wasm
                          configuration:
                            "@type": type.googleapis.com/google.protobuf.StringValue
                            value: |
                              {
                                "fallback_on": ["fallback-status-codes"],
                                "fallback_status_codes": [500],
                                "fallback": {
                                  "cluster": "httpbin",
                                  "headers": [
                                    [":method", "GET"],
                                    [":path", "/base64/U29ycnk="],
                                    [":authority", "httpbin.org"]
                                  ],
                                  "timeout": "1s"
                                },
                                "queue_name": "fallback-filter"
                              }
                  - name: kaidotio.metrics-exporter
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
                      config:
                        vm_config:
                          vm_id: kaidotio
                          runtime: envoy.wasm.runtime.v8
                          allow_precompiled: true
                          code:
                            local:
                              filename: /metrics_exporter.wasm
                          configuration:
                            "@type": type.googleapis.com/google.protobuf.StringValue
                            value: |
                              {
                                "vm_id": "kaidotio",
                                "queue_name": "fallback-filter"
                              }
                  - name: kaidotio.cookie-manipulator
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
                      config:
                        vm_config:
                          runtime: envoy.wasm.runtime.v8
                          allow_precompiled: true
                          code:
                            local:
                              filename: /cookie_manipulator.wasm
                          configuration:
                            "@type": type.googleapis.com/google.protobuf.StringValue
                            value: |
                              {
                                "cookies": {
                                  "request": {
                                    "set": [{
                                      "name": "foo",
                                      "value": "bar"
                                    }],
                                    "remove": ["baz"]
                                  },
                                  "response": {
                                    "set": [{
                                      "name": "foo",
                                      "http_only": true,
                                      "secure": true,
                                      "same_site": "Lax"
                                    }],
                                    "remove": ["qux"]
                                  }
                                }
                              }
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
                access_log:
                  - name: envoy.file_access_log
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                      path: /dev/stdout
                      log_format:
                        json_format:
                          time: "%START_TIME%"
                          forwardedfor: "%REQ(X-FORWARDED-FOR)%"
                          method: "%REQ(:METHOD)%"
                          host: "%DOWNSTREAM_REMOTE_ADDRESS_WITHOUT_PORT%"
                          traceparent: "%REQ(TRACEPARENT)%"
                          referer: "%REQ(REFERER)%"
                          reqtime: "%DURATION%"
                          scheme: "%REQ(:SCHEME)%"
                          protocol: "%PROTOCOL%"
                          size: "%BYTES_RECEIVED%"
                          status: "%RESPONSE_CODE%"
                          ua: "%REQ(USER-AGENT)%"
                          uri: "%REQ(:PATH)%"
                          vhost: "%REQ(:AUTHORITY)%"
    - name: http-base
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 8081
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: ingress_http
                route_config: *route_config
                http_filters:
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
  clusters:
    - name: httpbin
      connect_timeout: 1s
      type: LOGICAL_DNS
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: httpbin
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 127.0.0.1
                      port_value: 80
