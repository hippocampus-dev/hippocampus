apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
spec:
  serviceName: redis
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  selector:
    matchLabels: &labels
      app.kubernetes.io/name: redis
  template:
    metadata:
      labels:
        <<: *labels
    spec:
      automountServiceAccountToken: false
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: redis
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsUser: 65532
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          image: redis/redis-stack
          imagePullPolicy: IfNotPresent
          command:
            - bash
            - /mnt/redis-server.sh
          env:
            - name: SERVICE_NAME
              value: $(SERVICE_NAME)
            - name: QUORUM
              value: $(QUORUM)
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: MEMORY_REQUESTS
              valueFrom:
                resourceFieldRef:
                  containerName: redis
                  resource: requests.memory
          ports:
            - name: redis
              containerPort: 6379
              protocol: TCP
          startupProbe:
            exec:
              command:
                - bash
                - /mnt/startup-probe.sh
            initialDelaySeconds: 5
            periodSeconds: 10 # https://github.com/kubernetes/kubernetes/issues/82440
            successThreshold: 1
            failureThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
                - bash
                - /mnt/readiness-probe.sh
            initialDelaySeconds: 30
            periodSeconds: 10 # https://github.com/kubernetes/kubernetes/issues/82440
            successThreshold: 3
            failureThreshold: 5
            timeoutSeconds: 5
          livenessProbe:
            exec:
              command:
                - bash
                - /mnt/liveness-probe.sh
            initialDelaySeconds: 60
            periodSeconds: 10 # https://github.com/kubernetes/kubernetes/issues/82440
            successThreshold: 1
            failureThreshold: 60
            timeoutSeconds: 5
          volumeMounts:
            - name: config
              mountPath: /etc/redis
            - name: redis
              mountPath: /mnt
              readOnly: true
            - name: data
              mountPath: /data
        - name: sentinel
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsUser: 65532
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          image: redis/redis-stack
          imagePullPolicy: IfNotPresent
          command:
            - bash
            - /mnt/redis-sentinel.sh
          env:
            - name: SERVICE_NAME
              value: $(SERVICE_NAME)
            - name: QUORUM
              value: $(QUORUM)
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
            - name: sentinel
              containerPort: 6379
              protocol: TCP
          readinessProbe:
            tcpSocket:
              port: sentinel
            initialDelaySeconds: 5
            periodSeconds: 1
            successThreshold: 3
            failureThreshold: 1
            timeoutSeconds: 5
          livenessProbe:
            exec:
              command:
                - bash
                - /mnt/liveness-probe.sh
            initialDelaySeconds: 60
            periodSeconds: 10 # https://github.com/kubernetes/kubernetes/issues/82440
            successThreshold: 1
            failureThreshold: 30
            timeoutSeconds: 5
          volumeMounts:
            - name: config
              mountPath: /etc/redis
            - name: redis
              mountPath: /mnt
              readOnly: true
        - name: redis-exporter
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsUser: 65532
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          image: oliver006/redis_exporter
          imagePullPolicy: IfNotPresent
          args:
            - --redis.addr=redis://127.0.0.1:6379
      volumes:
        - name: config
          emptyDir:
            medium: Memory
        - name: redis
          configMap:
            name: redis
