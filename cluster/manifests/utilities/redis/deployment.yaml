apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-haproxy
spec:
  revisionHistoryLimit: 1
  selector:
    matchLabels: &labels
      app.kubernetes.io/name: redis-haproxy
  template:
    metadata:
      labels:
        <<: *labels
    spec:
      automountServiceAccountToken: false
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      initContainers:
        - name: config-init
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsUser: 65532
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          image: haproxy
          imagePullPolicy: IfNotPresent
          command:
            - bash
            - /mnt/init-haproxy.sh
          env:
            - name: SERVICE_NAME
              value: $(SERVICE_NAME)
            - name: QUORUM
              value: $(QUORUM)
            - name: REDIS_REPLICAS
              value: $(REDIS_REPLICAS)
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: config
              mountPath: /usr/local/etc/haproxy
            - name: redis-haproxy
              mountPath: /mnt
              readOnly: true
      containers:
        - name: haproxy
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsUser: 65532
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          image: haproxy
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 5m
          ports:
            - name: http
              containerPort: 8888
              protocol: TCP
            - name: redis
              containerPort: 6379
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 5
            periodSeconds: 1
            successThreshold: 3
            failureThreshold: 1
            timeoutSeconds: 5
          lifecycle:
            preStop:
              exec:
                command: ["sleep", "3"]
          volumeMounts:
            - name: config
              mountPath: /usr/local/etc/haproxy
              readOnly: true
        - name: haproxy-exporter
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsUser: 65532
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          image: quay.io/prometheus/haproxy-exporter
          imagePullPolicy: IfNotPresent
          args:
            - --haproxy.scrape-uri=http://127.0.0.1:8404/stats?stats;csv
      volumes:
        - name: tmp
          emptyDir:
            medium: Memory
        - name: config
          emptyDir:
            medium: Memory
        - name: redis-haproxy
          configMap:
            name: redis-haproxy
