apiVersion: apps/v1
kind: Deployment
metadata:
  name: cert-manager-cainjector
spec:
  revisionHistoryLimit: 1
  selector:
    matchLabels: &labels
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/component: cainjector
  template:
    metadata:
      labels:
        <<: *labels
    spec:
      serviceAccountName: cert-manager-cainjector
      automountServiceAccountToken: true
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: cert-manager-cainjector
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsUser: 65532
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          image: quay.io/jetstack/cert-manager-cainjector
          imagePullPolicy: IfNotPresent
          args:
            - --v=2
            - --leader-election-namespace=$(NAMESPACE)
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cert-manager
spec:
  revisionHistoryLimit: 1
  selector:
    matchLabels: &labels
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/component: controller
  template:
    metadata:
      labels:
        <<: *labels
    spec:
      serviceAccountName: cert-manager
      automountServiceAccountToken: true
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: cert-manager-controller
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsUser: 65532
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          image: quay.io/jetstack/cert-manager-controller
          imagePullPolicy: IfNotPresent
          args:
            - --v=2
            - --cluster-resource-namespace=$(NAMESPACE)
            - --leader-election-namespace=$(NAMESPACE)
            - --acme-http01-solver-image=quay.io/jetstack/cert-manager-acmesolver:v1.12.0
            - --max-concurrent-challenges=60
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cert-manager-webhook
spec:
  revisionHistoryLimit: 1
  selector:
    matchLabels: &labels
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/component: webhook
  template:
    metadata:
      labels:
        <<: *labels
    spec:
      serviceAccountName: cert-manager-webhook
      automountServiceAccountToken: true
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: cert-manager-webhook
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsUser: 65532
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          image: quay.io/jetstack/cert-manager-webhook
          imagePullPolicy: IfNotPresent
          args:
            - --v=2
            - --secure-port=10250
            - --dynamic-serving-ca-secret-namespace=$(NAMESPACE)
            - --dynamic-serving-ca-secret-name=cert-manager-webhook-ca
            - --dynamic-serving-dns-names=cert-manager-webhook
            - --dynamic-serving-dns-names=cert-manager-webhook.$(NAMESPACE)
            - --dynamic-serving-dns-names=cert-manager-webhook.$(NAMESPACE).svc
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
            - name: http
              containerPort: 6080
              protocol: TCP
            - name: https
              containerPort: 10250
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 5
            periodSeconds: 1
            successThreshold: 3
            failureThreshold: 1
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /livez
              port: http
            initialDelaySeconds: 60
            periodSeconds: 1
            successThreshold: 1
            failureThreshold: 3
            timeoutSeconds: 5
          lifecycle:
            preStop:
              exec:
                command: ["sleep", "3"]
