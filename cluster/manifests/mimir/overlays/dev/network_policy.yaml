apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny
spec:
  podSelector: {}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-envoy-stats-scrape
spec:
  podSelector: {}
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              name: prometheus
          podSelector:
            matchLabels:
              app.kubernetes.io/name: prometheus
      ports:
        - protocol: TCP
          port: 15020
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: mimir
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: mimir
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              name: mimir
          podSelector:
            matchLabels:
              app.kubernetes.io/name: mimir
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: mimir-proxy
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: mimir
      app.kubernetes.io/component: proxy
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              name: grafana
          podSelector:
            matchLabels:
              app.kubernetes.io/name: grafana
        - namespaceSelector:
            matchLabels:
              name: mimir
          podSelector:
            matchLabels:
              app.kubernetes.io/name: prometheus-adapter
      ports:
        - protocol: TCP
          port: 8080
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: mimir-distributor
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: mimir
      app.kubernetes.io/component: distributor
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              name: prometheus
          podSelector:
            matchLabels:
              app.kubernetes.io/name: prometheus
        - namespaceSelector:
            matchLabels:
              name: tempo
          podSelector:
            matchLabels:
              app.kubernetes.io/name: tempo
              app.kubernetes.io/component: metrics-generator
      ports:
        - protocol: TCP
          port: 3100
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: mimir-aleretmanager
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: mimir
      app.kubernetes.io/component: alertmanager
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              name: loki
          podSelector:
            matchLabels:
              app.kubernetes.io/name: loki
              app.kubernetes.io/component: ruler
        - namespaceSelector:
            matchLabels:
              name: grafana
          podSelector:
            matchLabels:
              app.kubernetes.io/name: grafana
      ports:
        - protocol: TCP
          port: 3100
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: mimir-minio
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: minio
      variant: mimir
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              name: mimir
          podSelector:
            matchLabels:
              app.kubernetes.io/name: mimir
        - namespaceSelector:
            matchLabels:
              name: mimir
          podSelector:
            matchLabels:
              app.kubernetes.io/name: mimir-mc
        - namespaceSelector:
            matchLabels:
              name: mimir
          podSelector:
            matchLabels:
              app.kubernetes.io/name: mimir-alertmanager-mc
      ports:
        - protocol: TCP
          port: 9000
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: mimir-mcrouter
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: mcrouter
      variant: mimir
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              name: mimir
          podSelector:
            matchLabels:
              app.kubernetes.io/name: mimir
      ports:
        - protocol: TCP
          port: 5000
