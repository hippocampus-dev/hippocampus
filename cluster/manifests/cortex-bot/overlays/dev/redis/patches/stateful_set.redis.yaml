apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  annotations:
    REPLICAS: "3"
    QUORUM: "2"
spec:
  replicas: 3
  template:
    metadata:
      labels:
        sidecar.istio.io/inject: "true"
      annotations:
        sidecar.istio.io/proxyCPULimit: 1000m
        sidecar.istio.io/proxyMemoryLimit: 128Mi
        sidecar.istio.io/proxyCPU: 30m
        sidecar.istio.io/proxyMemory: 64Mi
        prometheus.io/scrape: "true"
        prometheus.io/scheme: http
        prometheus.io/port: "9121"
        prometheus.io/path: /metrics
    spec:
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: redis
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          #whenUnsatisfiable: DoNotSchedule
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: redis
      containers:
        - name: redis
          resources:
            requests:
              memory: 512Mi
          volumeMounts:
            - name: data
              mountPath: /data
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Delete
    whenScaled: Delete
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
