apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
spec:
  replicas: 3
  serviceName: redis
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  selector:
    matchLabels: &labels
      app.kubernetes.io/name: redis
  template:
    metadata:
      labels:
        <<: *labels
    spec:
      automountServiceAccountToken: false
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: redis
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          #whenUnsatisfiable: DoNotSchedule
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: redis
      containers:
        - name: redis
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsUser: 65532
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          image: redis
          imagePullPolicy: IfNotPresent
          ports:
            - name: redis
              containerPort: 6379
              protocol: TCP
          resources:
            requests:
              memory: 128Mi
          volumeMounts:
            - name: data
              mountPath: /data
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Delete
    whenScaled: Delete
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 256Mi
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: redis
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: redis
---
apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  selector:
    app.kubernetes.io/name: redis
  ports:
    - name: tcp
      port: 6379
      protocol: TCP
      targetPort: redis
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: redis
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: redis
  ingress:
    - from:
        - namespaceSelector: {}
      ports:
        - protocol: TCP
          port: 6379
---
apiVersion: networking.istio.io/v1beta1
kind: ServiceEntry
metadata:
  name: redis
spec:
  hosts:
    - redis-0.redis.exactly-one-pod-hook.svc.cluster.local
    - redis-1.redis.exactly-one-pod-hook.svc.cluster.local
    - redis-2.redis.exactly-one-pod-hook.svc.cluster.local
  location: MESH_INTERNAL
  ports:
    - name: tcp
      number: 6379
      protocol: TCP
  resolution: NONE
