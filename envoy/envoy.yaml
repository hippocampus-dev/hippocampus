admin:
  access_log:
    typed_config:
      "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 15000

static_resources:
  listeners:
    - name: http
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 10080
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: ingress_http
                route_config:
                  virtual_hosts: &virtual_hosts
                    - name: stable-diffusion-webui
                      domains: ["stable-diffusion-webui.127.0.0.1.nip.io"]
                      routes:
                        - match:
                            prefix: "/"
                          route:
                            cluster: stable-diffusion-webui
                    - name: gcs
                      domains: ["gcs.127.0.0.1.nip.io"]
                      routes:
                        - match:
                            prefix: "/"
                          route:
                            cluster: gcs
                          typed_per_filter_config:
                            envoy.filters.http.fault:
                              "@type": type.googleapis.com/envoy.extensions.filters.http.fault.v3.HTTPFault
                              delay:
                                fixed_delay: 1s
                                percentage:
                                  numerator: 1
                    - name: jaeger
                      domains: ["jaeger.127.0.0.1.nip.io"]
                      routes:
                        - match:
                            prefix: "/"
                          route:
                            cluster: jaeger
                    - name: opentelemetry-collector
                      domains: ["opentelemetry-collector.127.0.0.1.nip.io"]
                      routes:
                        - match:
                            prefix: "/"
                          route:
                            cluster: opentelemetry-collector
                    - name: prometheus
                      domains: ["prometheus.127.0.0.1.nip.io"]
                      routes:
                        - match:
                            prefix: "/"
                          route:
                            cluster: prometheus
                    - name: grafana
                      domains: ["grafana.127.0.0.1.nip.io"]
                      routes:
                        - match:
                            prefix: "/"
                          route:
                            cluster: grafana
                    - name: httpbin
                      domains: ["httpbin.127.0.0.1.nip.io"]
                      routes:
                        - match:
                            prefix: "/"
                          route:
                            cluster: httpbin
                            timeout: 1s
                    - name: hippocampus-server
                      domains: ["hippocampus-server.127.0.0.1.nip.io"]
                      typed_per_filter_config:
                        envoy.filters.http.cors:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.CorsPolicy
                          allow_origin_string_match:
                            - exact: https://hippocampus-web.127.0.0.1.nip.io
                          filter_enabled:
                            default_value:
                              numerator: 100
                            runtime_key: cors.hippocampus-server
                        envoy.filters.http.csrf:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.csrf.v3.CsrfPolicy
                          filter_enabled:
                            default_value:
                              numerator: 100
                            runtime_key: csrf.hippocampus-server
                          additional_origins:
                            - exact: hippocampus-web.127.0.0.1.nip.io
                      routes:
                        - match:
                            path: "/metrics"
                          route:
                            cluster: hippocampus-server-monitor
                        - match:
                            prefix: "/debug"
                          route:
                            cluster: hippocampus-server-monitor
                            timeout: 0s
                        - match:
                            prefix: "/"
                          route:
                            cluster: hippocampus-server
                            timeout: 3s
                            retry_policy:
                              retry_on: gateway-error,retriable-4xx
                              num_retries: 3
                              per_try_timeout: 1s
                    - name: default
                      domains: ["*"]
                      routes:
                        - match:
                            prefix: "/"
                          route:
                            cluster: minikube
                http_filters:
                  - name: envoy.filters.http.lua
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
                      default_source_code:
                        inline_string: |
                            function envoy_on_request(request_handle)
                              local headers = request_handle:headers()
                              local scheme = headers:get(':scheme')
                              if scheme ~= "https" then
                                local path = headers:get(':path')
                                local authority = headers:get(':authority')
                                local location = "https://" .. authority .. path
                                request_handle:respond({[":status"] = "301", ["Location"] = location}, "Moved Permanently")
                              end
                            end
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
    - name: https
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 10443
      listener_filters:
        - name: envoy.filters.listener.tls_inspector
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.filters.listener.tls_inspector.v3.TlsInspector
      filter_chains:
        - filter_chain_match:
            server_names:
              - "*.127.0.0.1.nip.io"
          filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: ingress_https
                tracing:
                  provider:
                    name: envoy.tracers.opentelemetry
                    typed_config:
                      "@type": type.googleapis.com/envoy.config.trace.v3.OpenTelemetryConfig
                      grpc_service:
                        envoy_grpc:
                          cluster_name: opentelemetry-collector
                      service_name: envoy
                upgrade_configs:
                  - upgrade_type: websocket
                route_config:
                  virtual_hosts: *virtual_hosts
                http_filters:
                  - name: envoy.filters.http.fault
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.fault.v3.HTTPFault
                      abort:
                        header_abort: {}
                        percentage:
                          numerator: 100
                      delay:
                        header_delay: {}
                        percentage:
                          numerator: 100
                  - name: envoy.filters.http.cors
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors
                  - name: envoy.filters.http.csrf
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.csrf.v3.CsrfPolicy
                      filter_enabled:
                        default_value:
                          numerator: 0
                  - name: envoy.filters.http.compressor.gzip
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.compressor.v3.Compressor
                      compressor_library:
                        name: gzip
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.compression.gzip.compressor.v3.Gzip
                  - name: envoy.filters.http.compressor.brotli
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.compressor.v3.Compressor
                      compressor_library:
                        name: brotli
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.compression.brotli.compressor.v3.Brotli
                  - name: kaidotio.header-debugger
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
                      config:
                        vm_config:
                          runtime: envoy.wasm.runtime.v8
                          allow_precompiled: true
                          code:
                            local:
                              filename: /header_debugger.wasm
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
                access_log:
                  - name: envoy.file_access_log
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                      path: /dev/stdout
                      log_format:
                        json_format:
                          time: "%START_TIME%"
                          forwardedfor: "%REQ(X-FORWARDED-FOR)%"
                          method: "%REQ(:METHOD)%"
                          host: "%DOWNSTREAM_REMOTE_ADDRESS_WITHOUT_PORT%"
                          traceparent: "%REQ(TRACEPARENT)%"
                          referer: "%REQ(REFERER)%"
                          reqtime: "%DURATION%"
                          scheme: "%REQ(:SCHEME)%"
                          protocol: "%PROTOCOL%"
                          size: "%BYTES_RECEIVED%"
                          status: "%RESPONSE_CODE%"
                          ua: "%REQ(USER-AGENT)%"
                          uri: "%REQ(:PATH)%"
                          vhost: "%REQ(:AUTHORITY)%"
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
              common_tls_context:
                alpn_protocols:
                  - h2,http/1.1
                tls_certificates:
                  - certificate_chain:
                      filename: /var/certs/_wildcard.127.0.0.1.nip.io.pem
                    private_key:
                      filename: /var/certs/_wildcard.127.0.0.1.nip.io-key.pem
        - filter_chain_match:
            server_names:
              - "*.minikube.127.0.0.1.nip.io"
          filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: ingress_https
                upgrade_configs:
                  - upgrade_type: websocket
                route_config:
                  virtual_hosts: *virtual_hosts
                http_filters:
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
              common_tls_context:
                alpn_protocols:
                  - h2,http/1.1
                tls_certificates:
                  - certificate_chain:
                      filename: /var/certs/_wildcard.minikube.127.0.0.1.nip.io.pem
                    private_key:
                      filename: /var/certs/_wildcard.minikube.127.0.0.1.nip.io-key.pem
  clusters:
    - name: stable-diffusion-webui
      connect_timeout: 1s
      type: LOGICAL_DNS
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: stable-diffusion-webui
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: stable-diffusion-webui
                      port_value: 7860
    - name: gcs
      connect_timeout: 1s
      type: LOGICAL_DNS
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: gcs
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: gcs
                      port_value: 4443
    - name: jaeger
      connect_timeout: 1s
      type: LOGICAL_DNS
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: jaeger
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: jaeger
                      port_value: 16686
    - name: opentelemetry-collector
      typed_extension_protocol_options:
        envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
          "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
          explicit_http_config:
            http2_protocol_options: {}
      connect_timeout: 1s
      type: LOGICAL_DNS
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: opentelemetry-collector
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: opentelemetry-collector
                      port_value: 4317
    - name: prometheus
      connect_timeout: 1s
      type: LOGICAL_DNS
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: prometheus
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: prometheus
                      port_value: 9090
    - name: grafana
      connect_timeout: 1s
      type: LOGICAL_DNS
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: grafana
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: grafana
                      port_value: 3000
    - name: httpbin
      connect_timeout: 1s
      type: LOGICAL_DNS
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: httpbin
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: httpbin
                      port_value: 80
    - name: hippocampus-server
      connect_timeout: 1s
      type: LOGICAL_DNS
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: hippocampus-server
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: host.docker.internal
                      port_value: 8080
    - name: hippocampus-server-monitor
      connect_timeout: 1s
      type: LOGICAL_DNS
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: hippocampus-server-monitor
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: host.docker.internal
                      port_value: 8081
    - name: minikube
      connect_timeout: 1s
      type: LOGICAL_DNS
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: minikube
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: host.docker.internal
                      port_value: 10080
